in linux terminal when we in root, we can use exit command to exit the root. but sometimes it showed "there are stopped jobs".

use jobs command to see what are the stopped jobs 

use jobs -l command to find the number

use kill number command to kill the jobs 

then we can exit.

The reason of this problem is that we use Ctrl+Z or C to cause some jobs are hung



###########################
## Prerequisites
###########################


###########################
## install perl
###########################

[wangliang@localhost ~]$ perl -v

This is perl 5, version 16, subversion 3 (v5.16.3) built for x86_64-linux-thread-multi
(with 33 registered patches, see perl -V for more detail)

Copyright 1987-2012, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.

###########################
## install make
###########################

[wangliang@localhost ~]$ make -v
GNU Make 3.82
Built for x86_64-redhat-linux-gnu
Copyright (C) 2010  Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

###########################
## install cmake
###########################
yum install cmake

[root@localhost wangliang]# cmake -version
cmake version 2.8.12.2


###########################
## install gcc
###########################

[root@localhost wangliang]# gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) 



###########################
## install g++
###########################

yum install gcc-c++

[root@localhost wangliang]# which g++
/usr/bin/g++



###########################
## install curses.h
###########################

[root@localhost wangliang]# yum install ncurses
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.ustc.edu.cn
 * extras: centos.ustc.edu.cn
 * updates: centos.ustc.edu.cn
Package ncurses-5.9-14.20130511.el7_4.x86_64 already installed and latest version
Nothing to do




###########################
## install R
###########################
yum install epel-release

yum install R

## wait for a long time


###########################
## install unzip
###########################

yum install unzip

###########################
## install automake
###########################


yum install automake

###########################
## install autoconf
###########################

[root@localhost wangliang]# yum install autoconf
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.ustc.edu.cn
 * epel: mirrors.tongji.edu.cn
 * extras: centos.ustc.edu.cn
 * updates: centos.ustc.edu.cn
Package autoconf-2.69-11.el7.noarch already installed and latest version
Nothing to do



###########################
## install git
###########################

yum install git

###########################
## install gzip
###########################

yum install gzip

###########################
## install tar
###########################

yum install tar

###########################
## install java
###########################

[root@localhost wangliang]# yum install java
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.ustc.edu.cn
 * epel: mirrors.ustc.edu.cn
 * extras: centos.ustc.edu.cn
 * updates: centos.ustc.edu.cn
Package 1:java-1.8.0-openjdk-1.8.0.171-8.b10.el7_5.x86_64 already installed and latest version
Nothing to do


###########################
## install SeqMule
###########################

## switch back to normal user, not root
## pay attention here

[wangliang@localhost ~]$ git clone https://github.com/WGLab/SeqMule.git
Cloning into 'SeqMule'...
remote: Counting objects: 4341, done.
remote: Total 4341 (delta 0), reused 0 (delta 0), pack-reused 4341
Receiving objects: 100% (4341/4341), 25.40 MiB | 60.00 KiB/s, done.
Resolving deltas: 100% (2753/2753), done.

cd SeqMule
./Build freshinstall

## wait for a long time

./Build installexes


## pop out notification that missing gatk and soapsnp
## so we need install the two software use ./Build command

[wangliang@localhost SeqMule]$ ./Build gatk



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
CAUTION: SeqMule cannot automatically install GATK due to license limitations.
Please download, unpack it and copy GenomeAnalysisTK.jar to /home/wangliang/SeqMule/exe/gatk
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




[wangliang@localhost SeqMule]$ ./Build soapsnp

...
...
FINISHED --2018-05-24 22:31:04--
Total wall clock time: 0.8s
Downloaded: 1 files, 13K in 0.3s (45.5 KB/s)
Unpacking msort archive...
Configuring msort...
g++ -c -o msort.o msort.c -I. -g -O2 -Wall -W -m64 -m64 -lm
msort.c: In function ‘int main(int, char**)’:
msort.c:496:6: warning: variable ‘memlimit’ set but not used [-Wunused-but-set-variable]
  int memlimit;
      ^
g++ -c -o sort_funs.o sort_funs.c -I. -g -O2 -Wall -W -m64 -m64 -lm
In file included from sort_funs.c:1:0:
msort.h:116:16: warning: ‘file_db’ defined but not used [-Wunused-variable]
 static file_t *file_db = NULL;
                ^
g++    -c -o stdhashc.o stdhashc.cc
In file included from stdhashc.cc:2:0:
stdhash.hh: In instantiation of ‘bool hash_map_misc<keytype_t, valtype_t>::insert(const keytype_t&, const valtype_t&) [with keytype_t = unsigned int; valtype_t = int]’:
stdhashc.cc:72:51:   required from here
stdhash.hh:496:81: error: ‘direct_insert_aux’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]
   int ret = direct_insert_aux(key, this->n_capacity, this->keys, this->flags, &i);
                                                                                 ^
stdhash.hh:496:81: note: declarations in dependent base ‘__lh3_hash_base_class<unsigned int>’ are not found by unqualified lookup
stdhash.hh:496:81: note: use ‘this->direct_insert_aux’ instead
make: *** [stdhashc.o] Error 1
!!!!!!!!!!!!!!!!!!!!!!!!!
ERROR: Failed to make msort

## This error has been clearly stated in 
http://seqmule.openbioinformatics.org/en/latest/Installation/

## we need change to g++ 4.4.X version
## my current version is :
[root@localhost wangliang]# yum install gcc-c++
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.ustc.edu.cn
 * epel: mirrors.tongji.edu.cn
 * extras: centos.ustc.edu.cn
 * updates: centos.ustc.edu.cn
Package gcc-c++-4.8.5-28.el7_5.1.x86_64 already installed and latest version
Nothing to do


## back up the original gcc(4.8.5)
mv /usr/bin/gcc /usr/bin/gcc-4.8.5
mv /usr/bin/g++ /usr/bin/g++-4.8.5
mv /usr/bin/c++ /usr/bin/c++-4.8.5

## so far here, change the gcc version in the linux is a little annoying. So I give up the CentOS7 and turn to CentOS6.9
## where the dufault gcc version is 4.4.7 

## in CentOS6.9, installation of seqmule is much more smooth

## after installation of seqmule, the only thing left is installation of gatk!
## after installation of seqmule, all software necessary is installed except samtools and gatk
## use ./Build samtools to install
## gatk installation can not perform in seqmule, we have to turn to GATK website. see the next part


#######################################
## usefil commands
#######################################
## to check the version of centos
[root@localhost bin]# cat /etc/centos-release
CentOS Linux release 7.4.1708 (Core)

## to check the version of core
[root@localhost bin]# uname -r
3.10.0-693.21.1.el7.x86_64

## check 64 or 32 of the system
[root@localhost bin]# getconf LONG_BIT
64

####################################################################################################
## installation of GATK
####################################################################################################

## GATK4 installation need JAVA 1.8

## first we need install JAVA 1.8 in centos 6.9
## the default JAVA in centos 6.9 is JAVA 1.7, we need uninstall it first
rpm -qa | grep jdk
## find the old java version number
yum remove JAVA-version

## download the JAVA 1.8 from website
## http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
## remember download the tar.gz version


## unzip the downloaded file
mkdir /usr/local/java
cd /usr/lcoal/java
cp ../jdk-8u171-linux-x64.tar.gz ./
tar -zxvf jdk-8u171-linux-x64.tar.gz
rm jdk-8u171-linux-x64.tar.gz

## set the environment for java
vim /etc/profile

## add the following to the lcoal profile
## use source /etc/profile to make the settings valid
JAVA_HOME=/usr/local/java/jdk1.8.0_171
JRE_HOME=/usr/local/java/jdk1.8.0_171/jre
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
PATH=$JAVA_HOME/bin:$PATH
export PATH JAVA_HOME CLASSPATH

## pay attention here, even after we set the environment, we can not use "jave" command automatically,everytime I restart
## the computer or close the terminal, I have to "source /etc/profile" again to make "jave" usable. TO solve this,
## following the instructions:
vi /etc/profile.d/java.sh

## add the following to java.sh file
#!/bin/bash
JAVA_HOME=/usr/local/java/jdk1.8.0_171/
JRE_HOME=/usr/local/java/jdk1.8.0_171/jre
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
PATH=$JAVA_HOME/bin:$PATH
export PATH JAVA_HOME CLASSPATH


#######################################
## notice for the environment setting
#######################################

## if we have the program waiting for setting in the environment, be attention to following points
## 1. use "export PATH=/path/../program director/:$PATH" 
## 2. pay attention that the path should just stop at the program director, we should not set the path to the program
## 3. do not forget the ":$PATH" at the end of the path, or "export PATH=$PATH:/home/liang/GATK/gatk-4.0.4.0/"
## 4. after setting of the profile files, we should "source /etc/profile" or restart the computer.


#######################################
## download the gatk
#######################################

## download the gatk from https://software.broadinstitute.org/gatk/download/
## the downloaded file is *.zip
## unzip the file
## copy the file system to your ideal director
## set the environment for gatk
export PATH=$PATH:/home/liang/GATK/gatk-4.0.4.0/

## test of gatk
[liang@localhost ~]$ gatk --help

 Usage template for all tools (uses --spark-runner LOCAL when used with a Spark tool)
    gatk AnyTool toolArgs

 Usage template for Spark tools (will NOT work on non-Spark tools)
    gatk SparkTool toolArgs  [ -- --spark-runner <LOCAL | SPARK | GCS> sparkArgs ]

 Getting help
    gatk --list       Print the list of available tools

    gatk Tool --help  Print help on a particular tool

 Configuration File Specification
     --gatk-config-file                PATH/TO/GATK/PROPERTIES/FILE

 gatk forwards commands to GATK and adds some sugar for submitting spark jobs

   --spark-runner <target>    controls how spark tools are run
     valid targets are:
     LOCAL:      run using the in-memory spark runner
     SPARK:      run using spark-submit on an existing cluster 
                 --spark-master must be specified
                 --spark-submit-command may be specified to control the Spark submit command
                 arguments to spark-submit may optionally be specified after -- 
     GCS:        run using Google cloud dataproc
                 commands after the -- will be passed to dataproc
                 --cluster <your-cluster> must be specified after the --
                 spark properties and some common spark-submit parameters will be translated 
                 to dataproc equivalents

   --dry-run      may be specified to output the generated command line without running it
   --java-options 'OPTION1[ OPTION2=Y ... ]'   optional - pass the given string of options to the 
                 java JVM at runtime.  
                 Java options MUST be passed inside a single string with space-separated values.

#######################################
## finish the installation of seqmule
#######################################

## after installation of gatk, we have installed all the necessary software
## set the environment, we can use the seqmule !!
export PATH=/home/liang/SeqMule/bin:$PATH




